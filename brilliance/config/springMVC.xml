<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	       http://www.springframework.org/schema/context
	       http://www.springframework.org/schema/context/spring-context-3.0.xsd
	       http://www.springframework.org/schema/mvc
	       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	       http://www.springframework.org/schema/tool
	       http://www.springframework.org/schema/tool/spring-tool-3.0.xsd
	       http://www.springframework.org/schema/aop 
		   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	       http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" default-autowire="byName">
	       

	<context:component-scan base-package="com.brilliance" />
	<!-- register DefaultAnnotationHandlerMapping and AnnotationMethodHandlerAdapter -->
	<mvc:annotation-driven />
	<!--To enable @RequestMapping process on type level and method level -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- 导入外部的properties文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />


	<!-- 配置sessionFactory -->
	 <bean id="readHibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		    <constructor-arg index="0" ref="readSessionFactory" />
    </bean>
    
    <bean id="readSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="dataSource" ref="readDataSource"></property>
	</bean>
	
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		    <constructor-arg index="0" ref="writeSessionFactory" />
    </bean>
    
    <bean id="writeSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="dataSource" ref="writeDataSource"></property>
	</bean>
	
	
	 
	 <!--  
	 <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		    <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />  
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
	</bean>
	-->
	

	<bean id="readDataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl">
            <value><![CDATA[jdbc:mysql://${db.read.host}:${db.read.port}/${db.read.database}?useUnicode=true&characterEncoding=gbk&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true]]></value>
        </property>
        <property name="user"               value="${db.read.userName}" />
        <property name="password"           value="${db.read.password}" />
        <property name="maxPoolSize"        value="12" />
        <property name="minPoolSize"        value="0" />
        <property name="maxStatements"      value="100" />
        <property name="initialPoolSize"    value="3" />
        <property name="maxIdleTime"        value="1000"/>
        <property name="idleConnectionTestPeriod"   value="10" />
        <property name="testConnectionOnCheckin"    value="true" />
        <property name="testConnectionOnCheckout"   value="false" />
        <property name="preferredTestQuery"         value="SELECT 1 FROM DUAL" />
    </bean>
    
	<bean id="writeDataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl">
            <value><![CDATA[jdbc:mysql://${db.write.host}:${db.write.port}/${db.write.database}?useUnicode=true&characterEncoding=gbk&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true]]></value>
        </property>
        <property name="user"               value="${db.write.userName}" />
        <property name="password"           value="${db.write.password}" />
        <property name="maxPoolSize"        value="12" />
        <property name="minPoolSize"        value="0" />
        <property name="maxStatements"      value="100" />
        <property name="initialPoolSize"    value="3" />
        <property name="maxIdleTime"        value="1000"/>
        <property name="idleConnectionTestPeriod"   value="10" />
        <property name="testConnectionOnCheckin"    value="true" />
        <property name="testConnectionOnCheckout"   value="false" />
        <property name="preferredTestQuery"         value="SELECT 1 FROM DUAL" />
    </bean>  
	

		<bean id="dynamicDataSource" class="com.brilliance.dataSource.DynamicDataSource" >
     <!-- 通过key-value的形式来关联数据源 -->
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="readDataSource" key="readDataSource"></entry>
				<entry value-ref="writeDataSource" key="writeDataSource"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="readDataSource" >
		</property>
	</bean> 
	

	<!-- 允许对静态资源文件的访问 --> 
	<mvc:default-servlet-handler/>

	<!-- 配置声名式事务管理(采用注解的方式) -->
	<!--  
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	-->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="writeSessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!-- 打开AOP注解配置 (为哪些@Aspect切面创建代理)-->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<bean id="logAspect" class="com.brilliance.utils.LogAspect"></bean>
	
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="html" value="text/html" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/jsp/"/>
					<property name="suffix" value=".jsp"/>
				</bean>
			</list>
		</property>
	</bean>
	
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="2097152"/>
    </bean>

</beans>